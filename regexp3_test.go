//
// Recursive Regexp Raptor (go version)
// Available at http://github.com/nasciiboy/regexp3-go
//
// Copyright Â© 2017 nasciiboy <nasciiboy@gmail.com>.
// Distributed under the GNU GPL v3 License.
// See README.md for details.
//

//
// Unit tests
//

package regexp3

import "testing"

func TestRegexp3(t *testing.T) {
  nTest := []struct {
          txt, re string
          n uint
  }{
    { "a", "a", 1 },
    { "aa", "aa", 1 },
    { "raptor", "raptor", 1 },
    { "a", "(a)", 1 },
    { "a", "<a>", 1 },
    { "a", "((a))", 1 },
    { "a", "<<a>>", 1 },
    { "a", "((((((a))))))", 1 },
    { "a", "<<<<<<a>>>>>>", 1 },
    { "a", "b|a", 1 },
    { "a", "c|b|a", 1 },
    { "a", "(b|a)", 1 },
    { "a", "(c|b|a)", 1 },
    { "a", "(c|b)|a", 1 },
    { "a", "((<c>|<b>)|a)", 1 },
    { "raptor", "b|raptor", 1 },
    { "raptor", "c|b|raptor", 1 },
    { "raptor", "(b|raptor)", 1 },
    { "raptor", "(c|raptor)|a", 1 },
    { "raptor", "((<c>|<raptor>)|a)", 1 },
    { "ab", "a(b|c)|A(B|C)", 1 },
    { "ac", "a(b|c)|A(B|C)", 1 },
    { "AB", "a(b|c)|A(B|C)", 1 },
    { "AC", "a(b|c)|A(B|C)", 1 },
    { "ab", "a<b|c>|A<B|C>", 1 },
    { "ac", "a<b|c>|A<B|C>", 1 },
    { "AB", "a<b|c>|A<B|C>", 1 },
    { "AC", "a<b|c>|A<B|C>", 1 },
    { "ab"    , "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "ac"    , "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "AB"    , "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "AC"    , "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "ab"    , "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "ac"    , "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "AB"    , "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "AC"    , "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "1234ea", "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "1234eb", "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "1234ec", "(a(b|c)|A(B|C))|1234(ea|eb|ec)", 1 },
    { "1234ea", "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "1234eb", "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "1234ec", "<a<b|c>|A<B|C>>|1234<ea|eb|ec>", 1 },
    { "abd", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "abe", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "acd", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "ace", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "ABD", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "ABE", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "ACD", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "ACE", "a(b|c)(d|e)|A(B|C)(D|E)", 1 },
    { "raptor", "(c|r)(e|a)(p|q)(t|u)(0|o)(t|r)", 1 },

    { "",  "",  0 },
    { "", "a",  0 },
    { "a", "",  0 },
    { "a", "o", 0 },
    { "a", "a", 1 },
    { "aaa", "a", 3 },
    { "a", "aaa", 0 },
    { "a aaa aaa", "aaa", 2 },
    { "Raptor Test", "a", 1 },
    { "Raptor Test", "t", 2 },
    { "aeiou", "a|e|i|o|u", 5 },
    { "aeiou", "(a|e|i|o|u)", 5 },
    { "aeiou", "(a|e)|i|(o|u)", 5 },
    { "aeiou", "(a|(e))|(i|(o|u))", 5 },
    { "aa ae ai ao au", "a(a|e|i|o|u)", 5 },
    { "aa ae ai ao au", "a(0|1|2|3|4)", 0 },
    { "a1 a2 a3 ao au", "a(1|2|3|4|5)", 3 },
    { "a1 a2 a3 a4 a5", "a(1|2|3|4|5)", 5 },
    { "aa ae ai ao au", "a(a|e|i|o|u) ", 4 },
    { "aa ae Ai ao au", "A(a|e|i|o|u)", 1 },
    { "aa ae Ai ao au", "(A|a)(a|e|i|o|u)", 5 },
    { "aae aei Aio aoa auu", "(A|a)(a|e|i|o|u)(a|e|i|o|u)", 5 },

    { "aa aaaa aaaa", "a", 10 },
    { "aa aaaa aaaa", "aa", 5 },
    { "aa aaaa aaaa", "aaa", 2 },
    { "aa aaaa aaaa", "aaaa", 2 },
    { "aaaaaaaaaaaaaaaaaaaa", "a", 20 },
    { "abababababababababababababababababababab", "a"  , 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "(a)", 20 },
    { "abababababababababababababababababababab", "(a)", 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "<a>", 20 },
    { "abababababababababababababababababababab", "<a>", 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "a+",   1 },
    { "abababababababababababababababababababab", "a+" , 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "a?", 20 },
    { "abababababababababababababababababababab", "a?" , 40 },
    { "aaaaaaaaaaaaaaaaaaaa", "a*", 1 },
    { "abababababababababababababababababababab", "a*" , 40 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{1}", 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{1}", 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{5}", 4 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{1,5}", 4 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{5,5}", 4 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{10}", 2 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{1,100}", 1 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{001,00100}", 1 },
    { "abababababababababababababababababababab", "a{1}" , 20 },
    { "abababababababababababababababababababab", "a{001}" , 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{1,1}", 20 },
    { "abababababababababababababababababababab", "a{1,1}" , 20 },
    { "abababababababababababababababababababab", "a{001,000001}" , 20 },
    { "aaaaaaaaaaaaaaaaaaaa", "a{20}", 1 },
    { "abababababababababababababababababababab", "(a|b){1,1}" , 40 },

    { "abc", "<b>", 1 },
    { "abc", "a<b>", 1 },
    { "abc", "<b>c", 1 },
    { "abc", "a<b>c", 1 },
    { "abc", "<a|b>", 2 },
    { "abc", "<a|b|c>", 3 },
    { "abc", "<(a|b)|c>", 3 },
    { "aa aaaa aaaa", "<aa>", 5 },
    { "abc", "a<x>", 0 },
    { "abc", "<a>x", 0 },
    { "abc", "<a|b>x", 0 },
    { "abc", "<<a|b>x|abc>", 1 },
    { "abc", "<x<a|b>|abc>", 1 },
    { "abc abc abc", "<a|b|c>", 9 },
    { "abc abc abc", "<(a|b|c)(a|b|c)(a|b|c)>", 3 },
    { "abc abc abc", "<(a|b|c)(a|b|c)(a|b|c)> ", 2 },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 3 },

    { "a", "a?", 1 },
    { "a", "b?", 1 },
    { "a", "a+", 1 },
    { "a", "a*", 1 },
    { "a", "b*", 1 },
    { "a", "aa?", 1 },
    { "a", "ab?", 1 },
    { "a", "aa+", 0 },
    { "a", "aa*", 1 },
    { "a", "ab*", 1 },
    { "a", "a{1,2}", 1 },
    { "aaa", "a+", 1 },
    { "aaa", "a*", 1 },
    { "aaa", "a+", 1 },
    { "aaa", "a?", 3 },
    { "aaab", "a+", 1 },
    { "aaab", "a*", 2 },
    { "aaab", "a?", 4 },
    { "aaab", "a+b", 1 },
    { "aaab", "a*b", 1 },
    { "aaab", "a?b", 1 },
    { "aaab", "a+b?", 1 },
    { "aaab", "a*b?", 1 },
    { "aaab", "a?b?", 3 },
    { "aaab", "a+b+", 1 },
    { "aaab", "a*b+", 1 },
    { "aaab", "a?b+", 1 },
    { "aaab", "a+b*", 1 },
    { "aaab", "a*b*", 1 },
    { "aaab", "a?b*", 3 },
    { "aaabaaa", "a+", 2 },
    { "aaabaaa", "a*", 3 },
    { "aaabaaa", "a*", 3 },
    { "aaabaaa", "a*", 3 },
    { "a", "(a)?", 1 },
    { "a", "(b)?", 1 },
    { "a", "(a)+", 1 },
    { "a", "(a)*", 1 },
    { "a", "(b)*", 1 },
    { "aaa", "(a)+", 1 },
    { "aaa", "(a)*", 1 },

    { "Raptor Test",     "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1 },
    { "Raaaaptor TFest", "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1 },
    { "CaptorTest",      "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1 },
    { "Cap CaptorTest",  "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1 },
    { "Rap Captor Fest", "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1 },

    { "a", ":a", 1 },
    { "a", ":A", 0 },
    { "a", ":d", 0 },
    { "a", ":D", 1 },
    { "a", ":w", 1 },
    { "a", ":W", 0 },
    { "a", ":s", 0 },
    { "a", ":S", 1 },
    { "A", ":a", 1 },
    { "A", ":A", 0 },
    { "A", ":d", 0 },
    { "A", ":D", 1 },
    { "A", ":w", 1 },
    { "A", ":W", 0 },
    { "A", ":s", 0 },
    { "A", ":S", 1 },
    { "4", ":a", 0 },
    { "4", ":A", 1 },
    { "4", ":d", 1 },
    { "4", ":D", 0 },
    { "4", ":w", 1 },
    { "4", ":W", 0 },
    { "4", ":s", 0 },
    { "4", ":S", 1 },
    { " ", ":a", 0 },
    { " ", ":A", 1 },
    { " ", ":d", 0 },
    { " ", ":D", 1 },
    { " ", ":w", 0 },
    { " ", ":W", 1 },
    { " ", ":s", 1 },
    { " ", ":S", 0 },
    { "\t", ":a", 0 },
    { "\t", ":A", 1 },
    { "\t", ":d", 0 },
    { "\t", ":D", 1 },
    { "\t", ":w", 0 },
    { "\t", ":W", 1 },
    { "\t", ":s", 1 },
    { "\t", ":S", 0 },

    { "abc", ":a", 3 },
    { "abc", ":A", 0 },
    { "abc", ":d", 0 },
    { "abc", ":D", 3 },
    { "abc", ":w", 3 },
    { "abc", ":W", 0 },
    { "abc", ":s", 0 },
    { "abc", ":S", 3 },
    { "ABC", ":a", 3 },
    { "ABC", ":A", 0 },
    { "ABC", ":d", 0 },
    { "ABC", ":D", 3 },
    { "ABC", ":w", 3 },
    { "ABC", ":W", 0 },
    { "ABC", ":s", 0 },
    { "ABC", ":S", 3 },
    { "123", ":a", 0 },
    { "123", ":A", 3 },
    { "123", ":d", 3 },
    { "123", ":D", 0 },
    { "123", ":w", 3 },
    { "123", ":W", 0 },
    { "123", ":s", 0 },
    { "123", ":S", 3 },
    { " \n\t", ":a", 0 },
    { " \n\t", ":A", 3 },
    { " \n\t", ":d", 0 },
    { " \n\t", ":D", 3 },
    { " \n\t", ":w", 0 },
    { " \n\t", ":W", 3 },
    { " \n\t", ":s", 3 },
    { " \n\t", ":S", 0 },
    { " \n\t", ":a", 0 },
    { " \n\t", ":A", 3 },
    { " \n\t", ":d", 0 },
    { " \n\t", ":D", 3 },
    { " \n\t", ":w", 0 },
    { " \n\t", ":W", 3 },
    { " \n\t", ":s", 3 },
    { " \n\t", ":S", 0 },

    { "abc", ":a+", 1 },
    { "abc", ":A+", 0 },
    { "abc", ":d+", 0 },
    { "abc", ":D+", 1 },
    { "abc", ":w+", 1 },
    { "abc", ":W+", 0 },
    { "abc", ":s+", 0 },
    { "abc", ":S+", 1 },
    { "ABC", ":a+", 1 },
    { "ABC", ":A+", 0 },
    { "ABC", ":d+", 0 },
    { "ABC", ":D+", 1 },
    { "ABC", ":w+", 1 },
    { "ABC", ":W+", 0 },
    { "ABC", ":s+", 0 },
    { "ABC", ":S+", 1 },
    { "123", ":a+", 0 },
    { "123", ":A+", 1 },
    { "123", ":d+", 1 },
    { "123", ":D+", 0 },
    { "123", ":w+", 1 },
    { "123", ":W+", 0 },
    { "123", ":s+", 0 },
    { "123", ":S+", 1 },
    { " \n\t", ":a+", 0 },
    { " \n\t", ":A+", 1 },
    { " \n\t", ":d+", 0 },
    { " \n\t", ":D+", 1 },
    { " \n\t", ":w+", 0 },
    { " \n\t", ":W+", 1 },
    { " \n\t", ":s+", 1 },
    { " \n\t", ":S+", 0 },
    { " \n\t", ":a+", 0 },
    { " \n\t", ":A+", 1 },
    { " \n\t", ":d+", 0 },
    { " \n\t", ":D+", 1 },
    { " \n\t", ":w+", 0 },
    { " \n\t", ":W+", 1 },
    { " \n\t", ":s+", 1 },
    { " \n\t", ":S+", 0 },

    { "aeiou", ":a", 5 },

    { "(((", ":(", 3 },
    { ")))", ":)", 3 },
    { "<<<", ":<", 3 },
    { ">>>", ":>", 3 },
    { ":::", "::", 3 },
    { "|||", ":|", 3 },
    { "###", ":#", 3 },
    { ":#()|<>", ":::#:(:):|:<:>", 1 },
    { ":#()|<>", "(::|:#|:(|:)|:||:<|:>)", 7 },
    { "(test1)(test2)", ":(test:d:)", 2 },

    { "",  ".",  0 },
    { "a", ".",  1 },
    { "aaa", ".", 3 },
    { "a", "...", 0 },
    { "a aaa aaa", ".", 9 },
    { "a aaa aaa", "...", 3 },
    { "a aaa aaa", ".aa", 2 },
    { "a aaa aaa", "aa.", 2 },
    { "Raptor Test", ".a", 1 },
    { "Raptor Test", ".t", 2 },
    { "Raptor Test", ".z", 0 },
    { "Raptor Test", "a.", 1 },
    { "Raptor Test", " .", 1 },
    { "Raptor Test", "z.", 0 },
    { "a", ".?", 1 },
    { "a", ".+", 1 },
    { "a", ".*", 1 },
    { "a", ".{1}", 1 },
    { "a aaa aaa", ".?", 9 },
    { "a aaa aaa", ".+", 1 },
    { "a aaa aaa", ".*", 1 },
    { "a aaa aaa", ".{1}", 9 },
    { "a", "a.?", 1 },
    { "a", "a.+", 0 },
    { "a", "a.*", 1 },
    { "a", "a.{1}", 0 },
    { "aeiou", "a|.", 5 },
    { "aeiou", "a|.?", 5 },
    { "aeiou", "a|.+", 2 },
    { "aeiou", "a|.*", 2 },
    { "aeiou", ".|a", 5 },
    { "aeiou", ".?|a", 5 },
    { "aeiou", ".+|a", 1 },
    { "aeiou", ".*|a", 1},
    { "aeiou", "(a|.)", 5 },
    { "aeiou", "(a|.?)", 5 },
    { "aeiou", "(a|.+)", 2 },
    { "aeiou", "(a|.*)", 2 },
    { "aeiou", "(.|a)", 5 },
    { "aeiou", "(.?|a)", 5 },
    { "aeiou", "(.+|a)", 1 },
    { "aeiou", "(.*|a)", 1},
    { "aeiou", "a|(.)", 5 },
    { "aeiou", "a|(.?)", 5 },
    { "aeiou", "a|(.+)", 2 },
    { "aeiou", "a|(.*)", 2 },
    { "aeiou", "(.)|a", 5 },
    { "aeiou", "(.?)|a", 5 },
    { "aeiou", "(.+)|a", 1 },
    { "aeiou", "(.*)|a", 1},
    { "aeiou", "a|(.)", 5 },
    { "aeiou", "a|(.)?", 5 },
    { "aeiou", "a|(.)+", 2 },
    { "aeiou", "a|(.)*", 2 },
    { "aeiou", "(.)|a", 5 },
    { "aeiou", "(.)?|a", 5 },
    { "aeiou", "(.)+|a", 1 },
    { "aeiou", "(.)*|a", 1},
    { "abababababababababababababababababababab", "." , 40 },
    { "abababababababababababababababababababab", "(a.)" , 20 },
    { "abababababababababababababababababababab", "(.a)" , 19 },
    { "abababababababababababababababababababab", "(:a.)" , 20 },
    { "abababababababababababababababababababab", "(.:a)" , 20 },
    { "abababababababababababababababababababab", "(.{5}:a{5})" , 4 },

    { "",  "a-z",  0 },
    { "a", "a-z",  1 },
    { "a", "A-Z",  0 },
    { "A", "A-Z",  1 },
    { "1", "a-z",  0 },
    { "1", "0-9",  1 },
    { "a", "0-9",  0 },
    { "A", "0-9",  0 },
    { "abc", "a-z", 3 },
    { "a", "a-za-za-z", 0 },
    { "a bcd efg", "a-z", 7 },
    { "a bcd efg", "a-za-za-z", 2 },
    { "a baa eaa", "a-zaa", 2 },
    { "a aad aag", "aaa-z", 2 },
    { "Raptor Test", "A-Za", 1 },
    { "Raptor Test", "a-zt", 2 },
    { "Raptor Test", "a-zz", 0 },
    { "Raptor Test", "aa-z", 1 },
    { "Raptor Test", " A-Z", 1 },
    { "Raptor Test", "za-z", 0 },
    { "a", "a-z?", 1 },
    { "a", "a-z+", 1 },
    { "a", "a-z*", 1 },
    { "a", "a-z{1}", 1 },
    { "a bcd efg", "a-z?", 9 },
    { "a bcd efg", "a-z+", 3 },
    { "a bcd efg", "a-z*", 5 },
    { "a bcd efg", "a-z{1}", 7 },
    { "a", "aa-z?", 1 },
    { "a", "aa-z+", 0 },
    { "a", "aa-z*", 1 },
    { "a", "aa-z{1}", 0 },
    { "aeiou", "a|a-z", 5 },
    { "aeiou", "a|a-z?", 5 },
    { "aeiou", "a|a-z+", 2 },
    { "aeiou", "a|a-z*", 2 },
    { "aeiou", "a-z|a", 5 },
    { "aeiou", "a-z?|a", 5 },
    { "aeiou", "a-z+|a", 1 },
    { "aeiou", "a-z*|a", 1},
    { "aeiou", "(a|a-z)", 5 },
    { "aeiou", "(a|a-z?)", 5 },
    { "aeiou", "(a|a-z+)", 2 },
    { "aeiou", "(a|a-z*)", 2 },
    { "aeiou", "(a-z|a)", 5 },
    { "aeiou", "(a-z?|a)", 5 },
    { "aeiou", "(a-z+|a)", 1 },
    { "aeiou", "(a-z*|a)", 1},
    { "aeiou", "a|(a-z)", 5 },
    { "aeiou", "a|(a-z?)", 5 },
    { "aeiou", "a|(a-z+)", 2 },
    { "aeiou", "a|(a-z*)", 2 },
    { "aeiou", "(a-z)|a", 5 },
    { "aeiou", "(a-z?)|a", 5 },
    { "aeiou", "(a-z+)|a", 1 },
    { "aeiou", "(a-z*)|a", 1},
    { "aeiou", "a|(a-z)", 5 },
    { "aeiou", "a|(a-z)?", 5 },
    { "aeiou", "a|(a-z)+", 2 },
    { "aeiou", "a|(a-z)*", 2 },
    { "aeiou", "(a-z)|a", 5 },
    { "aeiou", "(a-z)?|a", 5 },
    { "aeiou", "(a-z)+|a", 1 },
    { "aeiou", "(a-z)*|a", 1},
    { "1a2a3a4a5a6a", "1-6a", 6 },
    { "1a2a3a4a5a6a", "1-3a", 3 },
    { "1a2b3c4d5e6f", "1-6a-z", 6 },
    { "1a2b3c4d5e6f", "1-3a-z", 3 },
    { "abababababababababababababababababababab", "(aa-z)" , 20 },
    { "abababababababababababababababababababab", "(a-za)" , 19 },
    { "abababababababababababababababababababab", "(:aa-z)" , 20 },
    { "abababababababababababababababababababab", "(a-z:a)" , 20 },
    { "abababababababababababababababababababab", "(a-z{5}:a{5})" , 4 },

    { "",  "[a]",  0 },
    { "a", "[a]",  1 },
    { "a", "[.]",  1 },
    { ".", "[.]",  1 },
    { "a", "[A]",  0 },
    { "A", "[A]",  1 },
    { "1", "[A]",  0 },
    { "1", "[1]",  1 },
    { "a", "[:a]", 1 },
    { "A", "[:D]", 1 },
    { "aaa", "[a-z]", 3 },
    { "a", "[a-z][a-z][a-z]", 0 },
    { "a aaa aaa", "[a-z]", 7 },
    { "a aaa aaa", "[ a-z]", 9 },
    { "a aaa aaa", "[a-z][a-z][a-z]", 2 },
    { "a aaa aaa", "[a-z]aa", 2 },
    { "a aaa aaa", "aa[a-z]", 2 },
    { "Raptor Test", "[:w]a", 1 },
    { "Raptor Test", "[:w]t", 2 },
    { "Raptor Test", "[a-z]z", 0 },
    { "Raptor Test", "a[a-z]", 1 },
    { "Raptor Test", " [A-Z]", 1 },
    { "Raptor Test", "z[a-z]", 0 },
    { "a", "[a]?", 1 },
    { "a", "[a]+", 1 },
    { "a", "[a]*", 1 },
    { "a", "[a]{1}", 1 },
    { "a aaa aaa", "[a-z]?", 9 },
    { "a aaa aaa", "[a-z]+", 3 },
    { "a aaa aaa", "[a-z]*", 5 },
    { "a aaa aaa", "[a-z]{1}", 7 },
    { "a", "a[a-z]?", 1 },
    { "a", "a[a-z]+", 0 },
    { "a", "a[a-z]*", 1 },
    { "a", "a[a-z]{1}", 0 },
    { "aeiou", "a|[aeiou]", 5 },
    { "aeiou", "a|[aeiou]?", 5 },
    { "aeiou", "a|[aeiou]+", 2 },
    { "aeiou", "a|[aeiou]*", 2 },
    { "aeiou", "[aeiou]|a", 5 },
    { "aeiou", "[aeiou]?|a", 5 },
    { "aeiou", "[aeiou]+|a", 1 },
    { "aeiou", "[aeiou]*|a", 1},
    { "aeiou", "(a|[aeiou])", 5 },
    { "aeiou", "(a|[aeiou]?)", 5 },
    { "aeiou", "(a|[aeiou]+)", 2 },
    { "aeiou", "(a|[aeiou]*)", 2 },
    { "aeiou", "([aeiou]|a)", 5 },
    { "aeiou", "([aeiou]?|a)", 5 },
    { "aeiou", "([aeiou]+|a)", 1 },
    { "aeiou", "([aeiou]*|a)", 1},
    { "aeiou", "a|([aeiou])", 5 },
    { "aeiou", "a|([aeiou]?)", 5 },
    { "aeiou", "a|([aeiou]+)", 2 },
    { "aeiou", "a|([aeiou]*)", 2 },
    { "aeiou", "([aeiou])|a", 5 },
    { "aeiou", "([aeiou]?)|a", 5 },
    { "aeiou", "([aeiou]+)|a", 1 },
    { "aeiou", "([aeiou]*)|a", 1},
    { "aeiou", "a|([aeiou])", 5 },
    { "aeiou", "a|([aeiou])?", 5 },
    { "aeiou", "a|([aeiou])+", 2 },
    { "aeiou", "a|([aeiou])*", 2 },
    { "aeiou", "([aeiou])|a", 5 },
    { "aeiou", "([aeiou])?|a", 5 },
    { "aeiou", "([aeiou])+|a", 1 },
    { "aeiou", "([aeiou])*|a", 1},
    { "1a2a3a4a5a6a", "[1-6]a", 6 },
    { "1a2a3a4a5a6a", "[1-3]a", 3 },
    { "1a2b3c4d5e6f", "[123456][abcdef]", 6 },
    { "1a2b3c4d5e6f", "[123][abcdef]", 3 },
    { ".b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b", "[:.]",  20 },
    { ".b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b", "[:.b]",  40 },
    { "abababababababababababababababababababab", "(a[ab])" , 20 },
    { "abababababababababababababababababababab", "([ab]a)" , 19 },
    { "abababababababababababababababababababab", "(:a[ab])" , 20 },
    { "abababababababababababababababababababab", "([ab]:a)" , 20 },
    { "abababababababababababababababababababab", "([ab]{5}:a{5})" , 4 },
    { "()<>[]{}*?+", "[:(:):<:>:[:]:{:}:*:?:+]", 11 },
    { ")>}", "[)>}]", 3 },

    { "",  "[^a]",  0 },
    { "a", "[^1]",  1 },
    { "a", "[^a]",  0 },
    { "A", "[^a]",  1 },
    { "1", "[^1]",  0 },
    { "1", "[^A]",  1 },
    { "a", "[^:a]", 0 },
    { "A", "[^:A]", 1 },
    { "aaa", "[^z]", 3 },
    { "a", "[^z][^z][^z]", 0 },
    { "a aaa aaa", "[^ ]", 7 },
    { "a aaa aaa", "[^ a]", 0 },
    { "a aaa aaa", "[^:d]", 9 },
    { "a aaa aaa", "[^:d:s]", 7 },
    { "a aaa aaa", "[^:d:s][^:d:s][^:d:s]", 2 },
    { "a aaa aaa", "[^:d:s]aa", 2 },
    { "a aaa aaa", "aa[^:d:s]", 2 },
    { "Raptor Test", "[^:d:s]a", 1 },
    { "Raptor Test", "[^A-Z]t", 2 },
    { "Raptor Test", "[^:s]z", 0 },
    { "Raptor Test", "a[^ ]", 1 },
    { "Raptor Test", " [^t]", 1 },
    { "Raptor Test", "z[^a]", 0 },
    { "a", "[^z]?", 1 },
    { "a", "[^z]+", 1 },
    { "a", "[^z]*", 1 },
    { "a", "[^z]{1}", 1 },
    { "a aaa aaa", "[^ ]?", 9 },
    { "a aaa aaa", "[^ ]+", 3 },
    { "a aaa aaa", "[^ ]*", 5 },
    { "a aaa aaa", "[^ ]{1}", 7 },
    { "a", "a[^ ]?", 1 },
    { "a", "a[^ ]+", 0 },
    { "a", "a[^ ]*", 1 },
    { "a", "a[^ ]{1}", 0 },
    { "aeiou", "a|[^ ]", 5 },
    { "aeiou", "a|[^ ]?", 5 },
    { "aeiou", "a|[^ ]+", 2 },
    { "aeiou", "a|[^ ]*", 2 },
    { "aeiou", "[^ ]|a", 5 },
    { "aeiou", "[^ ]?|a", 5 },
    { "aeiou", "[^ ]+|a", 1 },
    { "aeiou", "[^ ]*|a", 1},
    { "aeiou", "(a|[^ ])", 5 },
    { "aeiou", "(a|[^ ]?)", 5 },
    { "aeiou", "(a|[^ ]+)", 2 },
    { "aeiou", "(a|[^ ]*)", 2 },
    { "aeiou", "([^ ]|a)", 5 },
    { "aeiou", "([^ ]?|a)", 5 },
    { "aeiou", "([^ ]+|a)", 1 },
    { "aeiou", "([^ ]*|a)", 1},
    { "aeiou", "a|([^ ])", 5 },
    { "aeiou", "a|([^ ]?)", 5 },
    { "aeiou", "a|([^ ]+)", 2 },
    { "aeiou", "a|([^ ]*)", 2 },
    { "aeiou", "([^ ])|a", 5 },
    { "aeiou", "([^ ]?)|a", 5 },
    { "aeiou", "([^ ]+)|a", 1 },
    { "aeiou", "([^ ]*)|a", 1},
    { "aeiou", "a|([^ ])", 5 },
    { "aeiou", "a|([^ ])?", 5 },
    { "aeiou", "a|([^ ])+", 2 },
    { "aeiou", "a|([^ ])*", 2 },
    { "aeiou", "([^ ])|a", 5 },
    { "aeiou", "([^ ])?|a", 5 },
    { "aeiou", "([^ ])+|a", 1 },
    { "aeiou", "([^ ])*|a", 1},
    { "1a2a3a4a5a6a", "[^:a]a", 6 },
    { "1a2a3a4a5a6a", "[^4-6]a", 3 },
    { "1a2b3c4d5e6f", "[^:a][^:d]", 6 },
    { "1a2b3c4d5e6f", "[^4-6][^:d]", 3 },
    { "abababababababababababababababababababab", "(a[^a])" , 20 },
    { "abababababababababababababababababababab", "([^a]a)" , 19 },
    { "abababababababababababababababababababab", "(:a[^a])" , 20 },
    { "abababababababababababababababababababab", "([^b]:a)" , 20 },
    { "abababababababababababababababababababab", "([^x]{5}:a{5})" , 4 },
    { "()<>[]{}*?+", "[^:w]", 11 },

    { "ABC", "#^A", 1 },
    { "ABC", "#^AB", 1 },
    { "ABC", "#^ABC", 1 },
    { "ABC", "#^(b|A)", 1 },
    { "ABC", "#^A(B|C)(B|C)", 1 },
    { "ABC", "#^(A(B|C))(B|C)", 1 },
    { "ABC", "#$C", 1 },
    { "ABC", "#$BC", 1 },
    { "ABC", "#$ABC", 1 },
    { "ABC", "#$(b|C)", 1 },
    { "ABC", "#$A(B|C)(B|C)", 1 },
    { "ABC", "#$(A(B|C))(B|C)", 1 },
    { "ABC", "#^$ABC", 1 },
    { "ABC", "#^$A(c|B)(b|C)", 1 },
    { "ABC", "#^$A(B|C)(B|C)", 1 },
    { "ABC", "#^$(A(B|C))(B|C)", 1 },

    { "ABC", "#^E", 0 },
    { "ABC", "#^EB", 0 },
    { "ABC", "#^EBC", 0 },
    { "ABC", "#^(b|E)", 0 },
    { "ABC", "#^A(B|C)(B|E)", 0 },
    { "ABC", "#^(A(B|C))(B|E)", 0 },
    { "ABC", "#$E", 0 },
    { "ABC", "#$BE", 0 },
    { "ABC", "#$ABE", 0 },
    { "ABC", "#$(b|E)", 0 },
    { "ABC", "#$A(B|C)(B|E)", 0 },
    { "ABC", "#$(A(B|C))(B|E)", 0 },
    { "ABC", "#^$ABE", 0 },
    { "ABC", "#^$A(c|B)(b|E)", 0 },
    { "ABC", "#^$A(B|C)(B|E)", 0 },
    { "ABC", "#^$(A(B|C))(B|E)", 0 },

    { "A", "a#*", 1 },
    { "A", "a?#*", 1 },
    { "A", "b?#*", 1 },
    { "A", "a+#*", 1 },
    { "A", "a*#*", 1 },
    { "A", "b*#*", 1 },
    { "aAa", "a#*", 3 },
    { "aAa", "a+#*", 1 },
    { "aAa", "a*#*", 1 },
    { "aAa", "a+#*", 1 },
    { "aAa", "a?#*", 3 },
    { "aAab", "a+#*", 1 },
    { "aAab", "a*#*", 2 },
    { "aAab", "a?#*", 4 },
    { "aAab", "a+#*?^$~b", 1 },
    { "aAab", "a*#*?^$~b", 1 },
    { "aAab", "a?#*?^$~b", 1 },
    { "aAab", "a+#*?^$~b?", 1 },
    { "aAab", "a*#*?^$~b?", 1 },
    { "aAab", "a?#*?^$~b?", 3 },
    { "aAab", "a+#*?^$~b+", 1 },
    { "aAab", "a*#*?^$~b+", 1 },
    { "aAab", "a?#*?^$~b+", 1 },
    { "aAab", "a+#*?^$~b*", 1 },
    { "aAab", "a*#*?^$~b*", 1 },
    { "aAab", "a?#*?^$~b*", 3 },

    { "a", "a#*", 1 },
    { "a", "A#*", 1 },
    { "a", "#*A", 1 },
    { "a", "#*a", 1 },
    { "a", "#*(A)", 1 },
    { "a", "#*(a)", 1 },
    { "a", "#*[A]", 1 },
    { "a", "#*[a]", 1 },
    { "a", "#*A-Z", 1 },
    { "a", "A-Z#*", 1 },
    { "a", "(a)#*", 1 },
    { "a", "(A)#*", 1 },
    { "a", "[a]#*", 1 },
    { "a", "[A]#*", 1 },
    { "a", "#*[A-Z]", 1 },
    { "a", "[A-Z]#*", 1 },

    { "aAaA", "a#*", 4 },
    { "aAaA", "A#*", 4 },
    { "aAaA", "#*A", 4 },
    { "aAaA", "#*a", 4 },
    { "aAaA", "#*(A)", 4 },
    { "aAaA", "#*(a)", 4 },
    { "aAaA", "#*[A]", 4 },
    { "aAaA", "#*[a]", 4 },
    { "aAaA", "#*A-Z", 4 },
    { "aAaA", "A-Z#*", 4 },
    { "aAaA", "(a)#*", 4 },
    { "aAaA", "(A)#*", 4 },
    { "aAaA", "[a]#*", 4 },
    { "aAaA", "[A]#*", 4 },
    { "aAaA", "#*[A-Z]", 4 },
    { "aAaA", "[A-Z]#*", 4 },
    { "aAaA", "(a#*)", 4 },
    { "aAaA", "(A#*)", 4 },
    { "aAaA", "(a)#*", 4 },
    { "aAaA", "(A)#*", 4 },
    { "aAbB", "#*a|b", 4 },
    { "aAbB", "#*A|B", 4 },
    { "aAbB", "#*(a|b)", 4 },
    { "aAbB", "#*(A|B)", 4 },
    { "aAbB", "(a#*|b#*)", 4 },
    { "aAbB", "(A#*|B#*)", 4 },
    { "aAbB", "(a|b)#*", 4 },
    { "aAbB", "(A|B)#*", 4 },
    { "TesT", "test", 0 },
    { "TesT", "test#*", 0 },
    { "TesT", "t#*est#*", 1 },
    { "TesT", "#*test", 1 },
    { "TesT", "#*tESt", 1 },
    { "TesT", "#*(tESt)", 1 },
    { "TesT", "(tESt)#*", 1 },

    { "a aaa aaa", "#^aaa", 0 },
    { "a aaa aaa", "#$aaa", 1 },
    { "a aaa aaa", "#?aaa", 1 },
    { "a aaa aaa", "#~aaa", 2 },
    { "a aaa aaa", "#^?aaa", 0 },
    { "a aaa aaa", "#?^aaa", 0 },
    { "a aaa aaa", "#?$aaa", 1 },
    { "a aaa aaa", "#^?$aaa", 0 },
    { "a aaa aaa", "#?$^aaa", 0 },
    { "a aaa aaa", "#^?$a aaa aaa", 1 },
    { "aa aaaa aaaa", "#~a", 10 },
    { "aa aaaa aaaa", "#~aa", 7 },
    { "aa aaaa aaaa", "#~aaa", 4 },
    { "aaaaaaaaaaaaaaaaaaaa", "#?a+", 1 },
    { "abababababababababababababababababababab", "#?a+" , 1 },
    { "aaaaaaaaaaaaaaaaaaaa", "#~a+", 20 },
    { "abababababababababababababababababababab", "#~a+" , 20 },

    { "Raptor TesT Fest", "RapTor (tESt)#* fEST", 0 },
    { "Raptor TesT Fest", "#*rapTor (tESt) fEST", 1 },
    { "Raptor TesT Fest", "(RapTor)#* (tESt)#* (fEST)#*", 1 },
    { "Raptor TesT Fest", "((Rap#*Tor)#* (t#*ESt)#* (fEST)#*)#*", 1 },
    { "Raptor TesT Fest", "#*a-z#*apTor (tESt) A-Z#*EST", 1 },

    { "a", "a#/", 1 },
    { "a", "A#/", 0 },
    { "a", "#/A", 0 },
    { "a", "#/a", 1 },
    { "a", "#/(A)", 0 },
    { "a", "#/(a)", 1 },
    { "a", "#/[A]", 0 },
    { "a", "#/[a]", 1 },
    { "a", "#/A-Z", 0 },
    { "a", "A-Z#/", 0 },
    { "a", "(a)#/", 1 },
    { "a", "(A)#/", 0 },
    { "a", "[a]#/", 1 },
    { "a", "[A]#/", 0 },
    { "a", "#/[A-Z]", 0 },
    { "a", "[A-Z]#/", 0 },

    { "aAaA", "a#/", 2 },
    { "aAaA", "A#/", 2 },
    { "aAaA", "#/A", 2 },
    { "aAaA", "#/a", 2 },
    { "aAaA", "#/(A)", 2 },
    { "aAaA", "#/(a)", 2 },
    { "aAaA", "#/[A]", 2 },
    { "aAaA", "#/[a]", 2 },
    { "aAaA", "#/A-Z", 2 },
    { "aAaA", "A-Z#/", 2 },
    { "aAaA", "(a)#/", 2 },
    { "aAaA", "(A)#/", 2 },
    { "aAaA", "[a]#/", 2 },
    { "aAaA", "[A]#/", 2 },
    { "aAaA", "#/[A-Z]", 2 },
    { "aAaA", "[A-Z]#/", 2 },
    { "aAaA", "(a#/)", 2 },
    { "aAaA", "(A#/)", 2 },
    { "aAaA", "(a)#/", 2 },
    { "aAaA", "(A)#/", 2 },
    { "aAbB", "#/a|b", 2 },
    { "aAbB", "#/A|B", 2 },
    { "aAbB", "#/(a|b)", 2 },
    { "aAbB", "#/(A|B)", 2 },
    { "aAbB", "(a#/|b#/)", 2 },
    { "aAbB", "(A#/|B#/)", 2 },
    { "aAbB", "(a|b)#/", 2 },
    { "aAbB", "(A|B)#/", 2 },

    { "Raptor TesT Fest", "#*rapTor (tESt)#/ fEST", 0 },
    { "Raptor tESt Fest", "#*rapTor (tESt)#/ fEST", 1 },
    { "Raptor TesT Fest", "#*rapTor (tE#/S#/t)#* fEST", 0 },
    { "Raptor tESt Fest", "#*rapTor (tE#/S#/t)#* fEST", 1 },

    { "31/13-1331", "<0?[1-9]|[12][0-9]|3[01]><[/:-\\]><0?[1-9]|1[012]>@2<[12][0-9]{3}>", 0 },
    { "71-17/1177", "<0?[1-9]|[12][0-9]|3[01]><[/:-\\]><0?[1-9]|1[012]>@2<[12][0-9]{3}>", 0 },

    { "",  "@1",  0 },
    { "a", "@1",  0 },
    { "a", "@a",  0 },
    { "A", "@100", 0 },
    { "1", "@1",  0 },
    { "",  "[@1]",  0 },
    { "a", "[@1]",  0 },
    { "a", "[@a]",  1 },
    { "A", "[@100]", 0 },
    { "1", "[@1]",  1 },
    { "@", "[@1]",  1 },
    { "1@@a", "[a@1]",  4 },
    { "",  "[^@1",  0 },
    { "a", "[^@1]",  1 },
    { "a", "[^@a]",  0 },
    { "A", "[^@100]", 1 },
    { "1", "[^@1]",  0 },
    { "@", "[^2@]",  0 },

    { "",  "(@1)",  0 },
    { "a", "(@1)",  0 },
    { "a", "(@a)",  0 },
    { "A", "(@100)", 0 },
    { "1", "(@1)",  0 },
    { "",  "([@1])",  0 },
    { "a", "([@1])",  0 },
    { "a", "([@a])",  1 },
    { "A", "([@100])", 0 },
    { "1", "([@1])",  1 },

    { "a", "<a>@1",  0 },
    { "a", "<a>@1?", 1 },
    { "a", "<a>@1*", 1 },
    { "a", "<a>@1+", 0 },
    { "a", "<a>@1{1}", 0 },
    { "aa", "<a>@1",  1 },
    { "aa", "<a>@1?", 1 },
    { "aa", "<a>@1+", 1 },
    { "aa", "<a>@1*", 1 },
    { "aa", "<a>@1{1}", 1 },
    { "aaaaa", "<a>@1",  2 },
    { "aaaaa", "<a>@1?", 3 },
    { "aaaaa", "<a>@1+", 1 },
    { "aaaaa", "<a>@1*", 1 },
    { "aaaaa", "<a>@1{1}", 2 },

    { "a-a", "<a|:d|o_O!>:-@1",  1 },
    { "1-1", "<a|:d|o_O!>:-@1", 1 },
    { "o_O!-o_O!", "<a|:d|o_O!>:-@1", 1 },

    { "ae_ea", "<a><e>_@2@1", 1 },
    { "ae_ea", "<<a><e>>_@2@1", 0 },
    { "ae_aae", "<<a><e>>_@2@1", 1 },
    { "ae_eaae_ea", "<a><e>_@2@1", 2 },
    { "ae_eaae_ea", "<<a><e>>_@2@1", 0 },
    { "ae_aaeae_aae", "<<a><e>>_@2@1", 2 },
    { "ae_aaeae_aa1", "<<a><e>>_@2@1", 1 },
    { "aaaaa", "@1<a>", 0 },

    { "012345678910012345678910", "<0><1><2><3><4><5><6><7><8><9><10>@1@2@3@4@5@6@7@8@9@10@11", 1 },
  }

  for _, c := range nTest {
    x := Regexp3( c.txt, c.re )
    if x != c.n {
      t.Errorf( "Regexp3( \"%s\", \"%s\" ) == %d, want %d", c.txt, c.re, x, c.n )
    }
  }

  catchTest := []struct {
    txt, re string
    n uint32
    catch string
  }{
    { "a", "<a>", 1, "a" },
    { "a", "<a>", 1, "a" },
    { "aa", "<aa>", 1, "aa" },
    { "a a a", "<a>", 2, "a" },
    { "abcd", "<a|b|c|d>", 1, "a" },
    { "abcd", "<a|b|c|d>", 2, "b" },
    { "abcd", "<a|b|c|d>", 3, "c" },
    { "abcd", "<a|b|c|d>", 4, "d" },
    { "abcd", "<a|b|c|d>", 5, "" },
    { "abc", "a<x>", 1, "" },
    { "abc", "<a>x", 1, "" },
    { "abc", "<a|b>x", 1, "" },
    { "abc", "<<a|b>x|abc>", 1, "abc" },
    { "abc", "<<a|b>x|abc>", 2, "" },
    { "abc", "<x<a|b>|abc>", 1, "abc" },
    { "abc", "<x<a|b>|abc>", 2, "" },
    { "abc abc abc", "<a|b|c>", 9, "c" },
    { "abc abc abc", "<(a|b|c)(a|b|c)(a|b|c)>", 3, "abc" },
    { "abc abc abc", "<(a|b|c)(a|b|c)(a|b|c)> ", 2, "abc" },
    { "abc abc abc", "#?<(a|b|c)(a|b|c)(a|b|c)>", 1, "abc" },
    { "abc abc abc", "#?<(a|b|c)(a|b|c)((a|b)|x)>", 1, "" },
    { "abc abc abx", "#?<(a|b|c)(a|b|c)((a|b)|x)>", 1, "abx" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 1, "abc" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 2, "iec" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 3, "i" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 4, "c" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 5, "oeb" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 6, "o" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 7, "b" },
    { "abc iecc oeb", "<<(a|e)|(i|o)>e<b|c>|abc>", 8, "" },

    { "a", "<a>?", 1, "a" },
    { "a", "<b>?", 1, "" },
    { "a", "<a>+", 1, "a" },
    { "a", "<a>*", 1, "a" },
    { "a", "<b>*", 1, "" },
    { "aaa", "<a>+", 1, "aaa" },
    { "aaa", "<a>*", 1, "aaa" },
    { "aaa", "#~<a>+", 1, "aaa" },
    { "aaa", "#~<a>*", 1, "aaa" },
    { "aaab", "#~<a+>", 1, "aaa" },
    { "aaab", "#~<a*>", 1, "aaa" },
    { "aaab", "#~<a?>", 4, "" },
    { "aaab", "#~<a+b>", 1, "aaab" },
    { "aaab", "#~<a*b>", 1, "aaab" },
    { "aaab", "#~<a?b>", 1, "ab" },
    { "aaab", "#~<a+b?>", 1, "aaab" },
    { "aaab", "#~<a*b?>", 1, "aaab" },
    { "aaab", "#~<a?b?>", 3, "ab" },
    { "aaab", "#~<a+b+>", 1, "aaab" },
    { "aaab", "#~<a*b+>", 1, "aaab" },
    { "aaab", "#~<a?b+>", 1, "ab" },
    { "aaab", "#~<a+b*>", 1, "aaab" },
    { "aaab", "#~<a*b*>", 1, "aaab" },
    { "aaab", "#~<a?b*>", 3, "ab" },
    { "aaabaaa", "#~<a+>", 4, "aaa" },
    { "aaabaaa", "#~<a*>", 5, "aaa" },

    { "Raptor Test",     "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1, "Raptor Test" },
    { "Raptor Test",     "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 2, "T" },
    { "Raaaaptor TFest", "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1, "Raaaaptor TFest" },
    { "Raaaaptor TFest", "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 2, "TF" },
    { "CaptorTest",      "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1, "CaptorTest" },
    { "Cap CaptorTest",  "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1, "Cap CaptorTest" },
    { "Cap CaptorTest",  "#~<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 3, "CaptorTest" },
    { "Rap Captor Fest", "<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 1, "Rap Captor Fest" },
    { "Rap Captor Fest", "#~<((C|R)ap C|C|R)(a+p{1}tor) ?((<T|F>+e)(st))>", 3, "Captor Fest" },
    { "012345678910109876501234", "<0><1><2><3><4><5><6><7><8><9><10><@11@10@9@8@7@6@1@2@3@4@5>", 12, "109876501234" },
  }
  for _, c := range catchTest {
    Regexp3( c.txt, c.re )
    catch := GetCatch( c.n )
    if catch != c.catch {
      t.Errorf( "Regexp3( \"%s\", \"%s\" )\n",
                "GetCatch( %d ) == %s, want %s",
                c.txt, c.re, c.n, catch, c.catch )
    }
  }

  swapTest := []struct {
    txt, re string
    n uint32
    swap, want string
  }{
    { "aaab", "<a>"   , 1, "e", "eeeb" },
    { "a", "<a>"   , 1, "", "" },
    { "a", "<a>?"  , 1, "", "" },
    { "a", "<a>+"  , 1, "", "" },
    { "a", "<a>*"  , 1, "", "" },
    { "a", "<a>{1}", 1, "", "" },
    { "a", "<a?>"  , 1, "", "" },
    { "a", "<a+>"  , 1, "", "" },
    { "a", "<a*>"  , 1, "", "" },
    { "a", "<a{1}>", 1, "", "" },

    { "a", "<a>"   , 1, "e", "e" },
    { "a", "<a>?"  , 1, "e", "e" },
    { "a", "<a>+"  , 1, "e", "e" },
    { "a", "<a>*"  , 1, "e", "e" },
    { "a", "<a>{1}", 1, "e", "e" },
    { "a", "<a?>"  , 1, "e", "e" },
    { "a", "<a+>"  , 1, "e", "e" },
    { "a", "<a*>"  , 1, "e", "e" },
    { "a", "<a{1}>", 1, "e", "e" },

    { "a", "<x>"   , 1, "z", "a" },
    { "a", "<x>?"  , 1, "z", "za" },
    { "a", "<x>+"  , 1, "z", "a" },
    { "a", "<x>*"  , 1, "z", "za" },
    { "a", "<x>{1}", 1, "z", "a" },
    { "a", "<x?>"  , 1, "z", "za" },
    { "a", "<x+>"  , 1, "z", "a" },
    { "a", "<x*>"  , 1, "z", "za" },
    { "a", "<x{1}>", 1, "z", "a" },

    { "aaa", "<a>"   , 1, "", "" },
    { "aaa", "<a>?"  , 1, "", "" },
    { "aaa", "<a>+"  , 1, "", "" },
    { "aaa", "<a>*"  , 1, "", "" },
    { "aaa", "<a>{1}", 1, "", "" },
    { "aaa", "<a?>"  , 1, "", "" },
    { "aaa", "<a+>"  , 1, "", "" },
    { "aaa", "<a*>"  , 1, "", "" },
    { "aaa", "<a{1}>", 1, "", "" },

    { "aaa", "<a>"   , 1, "e", "eee" },
    { "aaa", "<a>?"  , 1, "e", "eee" },
    { "aaa", "<a>+"  , 1, "e", "e" },
    { "aaa", "<a>*"  , 1, "e", "e" },
    { "aaa", "<a>{1}", 1, "e", "eee" },
    { "aaa", "<a?>"  , 1, "e", "eee" },
    { "aaa", "<a+>"  , 1, "e", "e" },
    { "aaa", "<a*>"  , 1, "e", "e" },
    { "aaa", "<a{1}>", 1, "e", "eee" },

    { "aaa", "<x>"   , 1, "z", "aaa" },

    { "aaa", "<x>?"  , 1, "z", "zazaza" },
    { "aaa", "<x>+"  , 1, "z", "aaa" },
    { "aaa", "<x>*"  , 1, "z", "zazaza" },
    { "aaa", "<x>{1}", 1, "z", "aaa" },
    { "aaa", "<x?>"  , 1, "z", "zazaza" },
    { "aaa", "<x+>"  , 1, "z", "aaa" },
    { "aaa", "<x*>"  , 1, "z", "zazaza" },
    { "aaa", "<x{1}>", 1, "z", "aaa" },

    { "aaab", "<a>"   , 1, "e", "eeeb" },
    { "aaab", "<a>?"  , 1, "e", "eeeeb" },
    { "aaab", "<a>+"  , 1, "e", "eb" },
    { "aaab", "<a>*"  , 1, "e", "eeb" },
    { "aaab", "<a>{1}", 1, "e", "eeeb" },
    { "aaab", "<a?>"  , 1, "e", "eeeeb" },
    { "aaab", "<a+>"  , 1, "e", "eb" },
    { "aaab", "<a*>"  , 1, "e", "eeb" },
    { "aaab", "<a{1}>", 1, "e", "eeeb" },

    { "aaab", "<x>"   , 1, "z", "aaab" },
    { "aaab", "<x>?"  , 1, "z", "zazazazb" },
    { "aaab", "<x>+"  , 1, "z", "aaab" },
    { "aaab", "<x>*"  , 1, "z", "zazazazb" },
    { "aaab", "<x>{1}", 1, "z", "aaab" },
    { "aaab", "<x?>"  , 1, "z", "zazazazb" },
    { "aaab", "<x+>"  , 1, "z", "aaab" },
    { "aaab", "<x*>"  , 1, "z", "zazazazb" },
    { "aaab", "<x{1}>", 1, "z", "aaab" },

    { "aaabaaa", "<a>"   , 1, "e", "eeebeee" },
    { "aaabaaa", "<a>?"  , 1, "e", "eeeebeee" },
    { "aaabaaa", "<a>+"  , 1, "e", "ebe" },
    { "aaabaaa", "<a>*"  , 1, "e", "eebe" },
    { "aaabaaa", "<a>{1}", 1, "e", "eeebeee" },
    { "aaabaaa", "<a?>"  , 1, "e", "eeeebeee" },
    { "aaabaaa", "<a+>"  , 1, "e", "ebe" },
    { "aaabaaa", "<a*>"  , 1, "e", "eebe" },
    { "aaabaaa", "<a{1}>", 1, "e", "eeebeee" },

    { "aaabaaa", "<x>"   , 1, "z", "aaabaaa" },
    { "aaabaaa", "<x>?"  , 1, "z", "zazazazbzazaza" },
    { "aaabaaa", "<x>+"  , 1, "z", "aaabaaa" },
    { "aaabaaa", "<x>*"  , 1, "z", "zazazazbzazaza" },
    { "aaabaaa", "<x>{1}", 1, "z", "aaabaaa" },
    { "aaabaaa", "<x?>"  , 1, "z", "zazazazbzazaza" },
    { "aaabaaa", "<x+>"  , 1, "z", "aaabaaa" },
    { "aaabaaa", "<x*>"  , 1, "z", "zazazazbzazaza" },
    { "aaabaaa", "<x{1}>", 1, "z", "aaabaaa" },

    { "Raptor Test", "<Raptor>", 1, "Captor", "Captor Test"   },
    { "Raptor Test", "<Raptor>", 0, "Captor", "Raptor Test"   },
    { "Raptor Test", "<Raptor|Test>", 0, "Captor", "Raptor Test"   },
    { "Raptor Test", "<Raptor|Test>", 1, "Captor", "Captor Captor"   },
    { "Raptor Test", "<Raptor|Test>", 2, "Captor", "Raptor Test"   },
    { "Raptor Test", "<Raptor|<Test>>", 2, "Fest", "Raptor Fest"   },
    { "Raptor Raptors Raptoring", "<Raptor:w*>", 1, "Test", "Test Test Test" },
    { "Raptor Raptors Raptoring", "<Raptor>:w*", 1, "Test", "Test Tests Testing" },
    { "Raptor Raptors Raptoring", "<<<R>a>ptor>:w*", 3, "C", "Captor Captors Captoring" },
    { "Raptor Raptors Raptoring", "<<<R>a>ptor>:w*", 2, "4", "4ptor 4ptors 4ptoring" },
  }

  for _, c := range swapTest {
    Regexp3( c.txt, c.re )
    swap := RplCatch( c.swap, c.n )
    if swap != c.want {
      t.Errorf( "Regexp3( \"%s\", \"%s\" )\n",
                "RplCatch( %s, %d ) == %s, want %s",
                c.txt, c.re, c.swap, c.n, swap, c.swap )
    }
  }

  putTest := []struct {
    txt, re string
    put, want string
  }{
    { "a", "<a>", "#1", "a" },
    { "a", "<a>", "#x", "x" },
    { "a", "<a>", "#xx", "xx" },
    { "a", "<a>", "###1##", "#a#" },
    { "a", "<a>", "[#0][#1][#2#3#1000000]", "[][a][]" },
    { "aa", "<aa>", "#1", "aa" },
    { "a a a", "<a>", "#1#2#3", "aaa" },
    { "abcd", "<a|b|c|d>", "#4 #3 #2 #1", "d c b a" },
    { "1 2 3 4 5 6 7 8 9", "<1|2|3|4|5|6|7|8|9>", "#5 #6 #7 #8 #9 #1 #2 #3 #4", "5 6 7 8 9 1 2 3 4" },
    { "Raptor Test", "<aptor|est>", "C#1 F#2", "Captor Fest" },
    { "Raptor Test", "<aptor|est>", "C#5 F#2", "C Fest" },
    { "Raptor Test", "<aptor|est>", "C#a F#2", "Ca Fest" },
    { "Raptor Test", "<aptor|est>", "C#0 F#2", "C Fest" },
    { "Raptor Test", "<aptor|est>", "C#43 F#43", "C F" },
    { "Raptor Test", "<aptor|est>", "C##43 ##F#43##", "C#43 #F#" },
    { "Raptor Test", "<aptor|est>", "C##43 ##1##2", "C#43 #1#2" },
    { "Raptor Test", "<aptor|est>", "##Raptor ##Test", "#Raptor #Test" },
    { "Raptor Test Fest", "<Raptor> <Test>", "#1_#2", "Raptor_Test" },

    { "nasciiboy@gmail.com", "<[_A-Za-z0-9:-]+(:.[_A-Za-z0-9:-]+)*>:@<[A-Za-z0-9]+>:.<[A-Za-z0-9]+><:.[A-Za-z0-9]{2}>*", "[#1][#2][#3]", "[nasciiboy][gmail][com]" },
    { "<mail>nasciiboy@gmail.com</mail>", "<[_A-Za-z0-9:-]+(:.[_A-Za-z0-9:-]+)*>:@<[A-Za-z0-9]+>:.<[A-Za-z0-9]+><:.[A-Za-z0-9]{2}>*", "[#1][#2][#3]", "[nasciiboy][gmail][com]" },
    { "u.s.r_43@ru.com.jp", "<[_A-Za-z0-9:-]+(:.[_A-Za-z0-9:-]+)*>:@<[A-Za-z0-9]+>:.<[A-Za-z0-9]+><:.[A-Za-z0-9]{2}>*", "[#1][#2][#3]", "[u.s.r_43][ru][com]" },
    { "07-07-1777", "<0?[1-9]|[12][0-9]|3[01]><[/:-\\]><0?[1-9]|1[012]>@2<[12][0-9]{3}>", "d:#1 m:#3 y:#4", "d:07 m:07 y:1777" },
    { "fecha: 07-07-1777", "<0?[1-9]|[12][0-9]|3[01]><[/:-\\]><0?[1-9]|1[012]>@2<[12][0-9]{3}>", "d:#1 m:#3 y:#4", "d:07 m:07 y:1777" },
  }

  for _, c := range putTest {
    Regexp3( c.txt, c.re )
    put := PutCatch( c.put )
    if put != c.want {
      t.Errorf( "Regexp3( \"%s\", \"%s\" )\n",
                "PutCatch( %s ) == %s, want %s",
                c.txt, c.re, c.put, put, c.want )
    }
  }
}
